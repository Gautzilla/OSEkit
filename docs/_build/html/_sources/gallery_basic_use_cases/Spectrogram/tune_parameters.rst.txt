
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_basic_use_cases/Spectrogram/tune_parameters.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_basic_use_cases_Spectrogram_tune_parameters.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_basic_use_cases_Spectrogram_tune_parameters.py:


==============================================
Tuning some parameters
==============================================

This code will show you how to tune more 

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: default


    from pathlib import Path
    from OSmOSE import Spectrogram
    import glob








.. GENERATED FROM PYTHON SOURCE LINES 14-15

Define dataset path and name

.. GENERATED FROM PYTHON SOURCE LINES 15-20

.. code-block:: default


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "MPSU"
    campaign_name = ""








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Define standard parameters for spectrogram computation

.. GENERATED FROM PYTHON SOURCE LINES 22-35

.. code-block:: default


    spectrogram = Spectrogram(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name))

    spectrogram.dataset_sr = 18000
    spectrogram.spectro_duration = 15

    spectrogram.nfft = 1024
    spectrogram.window_size = 1024
    spectrogram.overlap = 80

    spectrogram.dynamic_min = -140
    spectrogram.dynamic_max = -12








.. GENERATED FROM PYTHON SOURCE LINES 36-37

Check size of spectrogram

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: default


    spectrogram.check_spectro_size()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    your smallest tile has a duration of: 15.0 (s), with a number of spectra of 1312 



    your resolutions : time =  0.011 (s) / frequency =  17.578 (Hz)




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Initialize everything needed for spectrogram computation ; in particular, this method will segment and/or resample audio files if needed

.. GENERATED FROM PYTHON SOURCE LINES 42-49

.. code-block:: default


    spectrogram.initialize()

    wav_path = glob.glob(path_osmose_dataset+f'{dataset_name}/data/audio/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/*wav')

    spectrogram.process_all_files(list_wav_to_process=wav_path)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Automatically reshaping audio files to fit the spectro duration value. Files will be 15 seconds long.
    Generating spectrograms for 2021_12_04T06_40_00.wav
    - data min : -0.043599591624315655 
     - data max : 0.0408572184436705 
     - data mean : -3.256038438041736e-05 
     - data std : 0.008187055127703766
    - min log spectro : -172.9915463895249 
     - max log spectro : -8.792831518758613 

    Generating spectrograms for 2021_12_04T06_40_15.wav
    - data min : -0.04882523892434128 
     - data max : 0.0487071332517277 
     - data mean : -3.528930784192402e-05 
     - data std : 0.00811411147225643
    - min log spectro : -152.1867336201935 
     - max log spectro : -6.681082899022445 

    Generating spectrograms for 2021_12_04T06_50_00.wav
    - data min : -0.033511807805999064 
     - data max : 0.03378511587047679 
     - data mean : -3.0569848501945664e-05 
     - data std : 0.007233793129894892
    - min log spectro : -149.18511017847976 
     - max log spectro : -16.71863902418962 

    Generating spectrograms for 2021_12_04T06_50_15.wav
    - data min : -0.07263694677527446 
     - data max : 0.06125275820136163 
     - data mean : -3.730065638181639e-05 
     - data std : 0.008284730742198244
    - min log spectro : -158.67639523879294 
     - max log spectro : -8.68441891376687 

    Generating spectrograms for 2021_12_04T07_00_00.wav
    - data min : -0.0353791861746213 
     - data max : 0.032017860200249285 
     - data mean : -3.058869269670414e-05 
     - data std : 0.006896311374136439
    - min log spectro : -137.3532132851326 
     - max log spectro : -16.55967468585012 

    Generating spectrograms for 2021_12_04T06_45_00.wav
    - data min : -0.03271694052703739 
     - data max : 0.03550244405117467 
     - data mean : -2.470931195863298e-05 
     - data std : 0.007168413733075086
    - min log spectro : -134.7586202758711 
     - max log spectro : -16.799396474289022 

    Generating spectrograms for 2021_12_04T06_45_15.wav
    - data min : -0.032692184394880704 
     - data max : 0.028990941280004096 
     - data mean : -3.348295730210429e-05 
     - data std : 0.0069611601087854495
    - min log spectro : -148.48923552005738 
     - max log spectro : -17.432529154500155 

    Generating spectrograms for 2021_12_04T07_00_15.wav
    - data min : -0.03393691048092638 
     - data max : 0.03207500968610353 
     - data mean : -1.4907714119963936e-05 
     - data std : 0.006842811109712114
    - min log spectro : -146.8071845006292 
     - max log spectro : -16.14939243921077 

    Generating spectrograms for 2021_12_04T06_55_00.wav
    - data min : -0.22344564529106045 
     - data max : 0.1584035185104064 
     - data mean : -3.0459480142493036e-05 
     - data std : 0.015558977306660969
    - min log spectro : -155.55863280371153 
     - max log spectro : 1.5318814344393026 

    Generating spectrograms for 2021_12_04T07_10_00.wav
    - data min : -0.042873458835719 
     - data max : 0.04607848884003839 
     - data mean : -2.7528583020479752e-05 
     - data std : 0.007092797925864307
    - min log spectro : -141.246302487159 
     - max log spectro : -15.506930718985119 

    Generating spectrograms for 2021_12_04T06_55_15.wav
    - data min : -0.04948294802461567 
     - data max : 0.0724102864258771 
     - data mean : -3.179966152878225e-05 
     - data std : 0.008127737227802023
    - min log spectro : -139.32829952935143 
     - max log spectro : -7.673325870463714 

    Generating spectrograms for 2021_12_04T07_10_15.wav
    - data min : -0.032933465292427286 
     - data max : 0.03590521275416265 
     - data mean : -2.8949383472354138e-05 
     - data std : 0.006741754713959076
    - min log spectro : -148.61428688691382 
     - max log spectro : -16.572049234059097 

    Generating spectrograms for 2021_12_04T07_05_00.wav
    - data min : -0.03440312222645359 
     - data max : 0.034693545653262506 
     - data mean : -3.6658858799508606e-05 
     - data std : 0.007197493204620723
    - min log spectro : -173.2026519655707 
     - max log spectro : -15.155617931053625 

    Generating spectrograms for 2021_12_04T07_20_00.wav
    - data min : -0.032010778011500055 
     - data max : 0.03458223234973341 
     - data mean : -3.314539181087843e-05 
     - data std : 0.007145486956007369
    - min log spectro : -157.32920231026182 
     - max log spectro : -15.478991058895971 

    Generating spectrograms for 2021_12_04T07_15_00.wav
    - data min : -0.09924625398421374 
     - data max : 0.09158876466307328 
     - data mean : -2.7759113660133463e-05 
     - data std : 0.01204331800062843
    - min log spectro : -157.82381488219394 
     - max log spectro : -7.741832748322784 

    Generating spectrograms for 2021_12_04T07_05_15.wav
    - data min : -0.031218231758656827 
     - data max : 0.03886586145252704 
     - data mean : -4.107302409942018e-05 
     - data std : 0.006843314685816063
    - min log spectro : -167.01485756522047 
     - max log spectro : -16.746542016124586 

    Generating spectrograms for 2021_12_04T07_20_15.wav
    - data min : -0.03378479822699975 
     - data max : 0.029732829137727824 
     - data mean : -3.313237826505332e-05 
     - data std : 0.006786943301938468
    - min log spectro : -146.91793691711547 
     - max log spectro : -16.69733359871541 

    Generating spectrograms for 2021_12_04T07_15_15.wav
    - data min : -0.06430679719393462 
     - data max : 0.08806874597417144 
     - data mean : -3.627654021683887e-05 
     - data std : 0.011381953559107818
    - min log spectro : -173.6233388564238 
     - max log spectro : -13.451690923726323 





.. GENERATED FROM PYTHON SOURCE LINES 50-51

Visualize an example of spectrogram 

.. GENERATED FROM PYTHON SOURCE LINES 51-68

.. code-block:: default


    spectrogram_path = glob.glob(path_osmose_dataset+f'{dataset_name}/processed/spectrogram/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/{spectrogram.nfft}_{spectrogram.window_size}_{spectrogram.overlap}/image/*png')

    from matplotlib import pyplot as plt
    from matplotlib import image as mpimg
  
    image = mpimg.imread(spectrogram_path[0])
    plt.imshow(image, interpolation='nearest', aspect='auto')

    ax = plt.gca()
    ax.xaxis.set_tick_params(labelbottom=False)
    ax.yaxis.set_tick_params(labelleft=False)
    ax.set_xticks([])
    ax.set_yticks([])

    plt.show()




.. image-sg:: /gallery_basic_use_cases/Spectrogram/images/sphx_glr_tune_parameters_001.png
   :alt: tune parameters
   :srcset: /gallery_basic_use_cases/Spectrogram/images/sphx_glr_tune_parameters_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 21.035 seconds)


.. _sphx_glr_download_gallery_basic_use_cases_Spectrogram_tune_parameters.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_parameters.py <tune_parameters.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_parameters.ipynb <tune_parameters.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
