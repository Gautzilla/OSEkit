
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_tutorials/Dataset/plot_dataset.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_tutorials_Dataset_plot_dataset.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_tutorials_Dataset_plot_dataset.py:


Build a OSmOSE dataset
=========================

This code will format raw data into a OSmOSE dataset

.. GENERATED FROM PYTHON SOURCE LINES 11-13

Package importation
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 13-16

.. code-block:: default

    from pathlib import Path
    from OSmOSE import Dataset








.. GENERATED FROM PYTHON SOURCE LINES 17-19

Define paths and names
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 19-24

.. code-block:: default


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "MPSU"
    campaign_name = ""








.. GENERATED FROM PYTHON SOURCE LINES 25-27

Define analysis parameters
----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 27-37

.. code-block:: default



    save_matrix = False # Set to True if you want to generate the numpy matrices
    save_image = True # Set to False if you don't want to generate the spectrogram images.

    date_template = "%Y%m%d_%H%M%S" # strftime format, used to build the dataset from scratch (ignore if the dataset is already built)
    depth = 10
    gps_coordinates = (10,10)
    gps_coordinates





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (10, 10)



.. GENERATED FROM PYTHON SOURCE LINES 38-40

Run the class Dataset
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 40-47

.. code-block:: default


    dataset = Dataset(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name), gps_coordinates = gps_coordinates, depth = depth, timezone='+00:00')
    dataset.build(date_template = date_template , force_upload=False, number_test_bad_files=1)








.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Timestamp extraction seems OK, here is an example: 20211204_073000.wav -> 2021-12-04T07:30:00.000000+0000 

    Scanning audio files:   0%|          | 0/1026 [00:00<?, ?it/s]    Scanning audio files:   5%|▍         | 50/1026 [00:00<00:01, 493.77it/s]    Scanning audio files:  10%|█         | 105/1026 [00:00<00:01, 524.25it/s]    Scanning audio files:  16%|█▌        | 161/1026 [00:00<00:01, 537.45it/s]    Scanning audio files:  21%|██        | 215/1026 [00:00<00:01, 516.92it/s]    Scanning audio files:  26%|██▌       | 267/1026 [00:00<00:01, 510.51it/s]    Scanning audio files:  31%|███       | 319/1026 [00:00<00:01, 507.77it/s]    Scanning audio files:  36%|███▌      | 370/1026 [00:00<00:01, 508.30it/s]    Scanning audio files:  42%|████▏     | 426/1026 [00:00<00:01, 522.07it/s]    Scanning audio files:  47%|████▋     | 480/1026 [00:00<00:01, 525.15it/s]    Scanning audio files:  52%|█████▏    | 533/1026 [00:01<00:00, 520.49it/s]    Scanning audio files:  57%|█████▋    | 587/1026 [00:01<00:00, 523.97it/s]    Scanning audio files:  62%|██████▏   | 640/1026 [00:01<00:00, 510.37it/s]    Scanning audio files:  67%|██████▋   | 692/1026 [00:01<00:00, 503.80it/s]    Scanning audio files:  72%|███████▏  | 743/1026 [00:01<00:00, 487.98it/s]    Scanning audio files:  77%|███████▋  | 792/1026 [00:01<00:00, 460.89it/s]    Scanning audio files:  82%|████████▏ | 839/1026 [00:01<00:00, 459.54it/s]    Scanning audio files:  86%|████████▋ | 886/1026 [00:01<00:00, 431.99it/s]    Scanning audio files:  91%|█████████ | 930/1026 [00:01<00:00, 415.43it/s]    Scanning audio files:  95%|█████████▍| 972/1026 [00:02<00:00, 406.78it/s]    Scanning audio files:  99%|█████████▊| 1013/1026 [00:02<00:00, 391.25it/s]    Scanning audio files: 100%|██████████| 1026/1026 [00:02<00:00, 470.37it/s]

     DONE ! your dataset is on OSmOSE platform !





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.923 seconds)


.. _sphx_glr_download_gallery_tutorials_Dataset_plot_dataset.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_dataset.py <plot_dataset.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_dataset.ipynb <plot_dataset.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
