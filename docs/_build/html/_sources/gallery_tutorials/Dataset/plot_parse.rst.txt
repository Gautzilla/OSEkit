
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_tutorials/Dataset/plot_parse.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_tutorials_Dataset_plot_parse.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_tutorials_Dataset_plot_parse.py:


Alternating text and code
=========================

Sphinx-Gallery is capable of transforming Python files into reST files
with a notebook structure. For this to be used you need to respect some syntax
rules. This example demonstrates how to alternate text and code blocks and some
edge cases. It was designed to be compared with the
:download:`source Python script <plot_parse.py>`.

.. GENERATED FROM PYTHON SOURCE LINES 13-14

This is the first text block and directly follows the header docstring above.

.. GENERATED FROM PYTHON SOURCE LINES 14-17

.. code-block:: default


    import numpy as np  # noqa: F401








.. GENERATED FROM PYTHON SOURCE LINES 18-26

.. code-block:: default


    # You can separate code blocks using either a single line of ``#``'s
    # (>=20 columns), ``#%%``, or ``# %%``. For consistency, it is recommend that
    # you use only one of the above three 'block splitter' options in your project.
    A = 1

    import matplotlib.pyplot as plt  # noqa: F401








.. GENERATED FROM PYTHON SOURCE LINES 27-29

Block splitters allow you alternate between code and text blocks **and**
separate sequential blocks of code (above) and text (below).

.. GENERATED FROM PYTHON SOURCE LINES 31-35

A line of ``#``'s also works for separating blocks. The above line of ``#``'s
separates the text block above from this text block. Notice however, that
separated text blocks only shows as a new lines between text, in the rendered
output.

.. GENERATED FROM PYTHON SOURCE LINES 35-47

.. code-block:: default



    def dummy():
        """This should not be part of a 'text' block'"""  # noqa: D404

        # %%
        # This comment inside a code block will remain in the code block
        pass


    # this line should not be part of a 'text' block








.. GENERATED FROM PYTHON SOURCE LINES 48-52

####################################################################

The above syntax makes a line cut in Sphinx. Note the space between the first
``#`` and the line of ``#``'s.

.. GENERATED FROM PYTHON SOURCE LINES 55-70

.. warning::
    The next kind of comments are not supported (notice the line of ``#``'s
    and the ``# %%`` start at the margin instead of being indented like
    above) and become too hard to escape so just don't use code like this::

        def dummy2():
            """Function docstring"""
        ####################################
        # This comment
        # %%
        # and this comment inside python indentation
        # breaks the block structure and is not
        # supported
            dummy2


.. GENERATED FROM PYTHON SOURCE LINES 70-73

.. code-block:: default


    """Free strings are not supported. They will be rendered as a code block"""





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    'Free strings are not supported. They will be rendered as a code block'



.. GENERATED FROM PYTHON SOURCE LINES 74-82

New lines can be included in your text block and the parser
is capable of retaining this important whitespace to work with Sphinx.
Everything after a block splitter and starting with ``#`` then one space,
is interpreted by Sphinx-Gallery to be a reST text block. Keep your text
block together using ``#`` and a space at the beginning of each line.

reST header within text block
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 85-96

Raw data preparation
------------------------
Before you can build your dataset: 
Step 1 
^^^^^^^^^
choose a dataset name (should not contain any special character, including '-'‚Åæ ; 
Step 2
^^^^^^^^^
create the folder ``/home/datawork-osmose/dataset/{dataset_name}`` (or ``home/datawork-osmose/dataset/{campaign_name}/{dataset_name}`` in case of a recording campaign); 
* place in this folder your audio data, they can be individual files or contain within multiple sub-folders ; 
* if you have any csv files (either a ``timestamp.csv`` or ``*gps*.csv`` file) should also be placed in this folder ;

.. GENERATED FROM PYTHON SOURCE LINES 98-102

**Important remarks:** 
- about timestamps : all timestamps from your original data (from your audio filenames or from your csv files) MUST follow the same timestamp template which should be given in ``date_template`` ; 
- about ``*gps*.csv`` file : this file provides the GPS track (ie latitude and longitude coordinates) of a moving hydrophone. This file must contain the term *gps* in its filename ; 
- about auxiliary csv files : they must contain headers with the following standardized names : timestamp , depth , lat , lon

.. GENERATED FROM PYTHON SOURCE LINES 102-108

.. code-block:: default





    print("one")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    one




.. GENERATED FROM PYTHON SOURCE LINES 110-114

.. code-block:: default


    # another way to separate code blocks shown above
    B = 1








.. GENERATED FROM PYTHON SOURCE LINES 115-121

Code blocks containing Jupyter magic are executable
    .. code-block:: bash

      %%bash
      # This could be run!


.. GENERATED FROM PYTHON SOURCE LINES 123-130

Last text block.

That's all folks !

.. literalinclude:: plot_parse.py




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.005 seconds)


.. _sphx_glr_download_gallery_tutorials_Dataset_plot_parse.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_parse.py <plot_parse.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_parse.ipynb <plot_parse.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
