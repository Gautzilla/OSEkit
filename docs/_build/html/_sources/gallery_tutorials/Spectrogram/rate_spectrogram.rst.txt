
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_tutorials/Spectrogram/rate_spectrogram.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_tutorials_Spectrogram_rate_spectrogram.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_tutorials_Spectrogram_rate_spectrogram.py:


==============================================
Generate spectrograms
==============================================

This code will show you how to compute spectrograms

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: default


    from pathlib import Path
    from OSmOSE import Spectrogram
    import glob


.. GENERATED FROM PYTHON SOURCE LINES 14-15

Define dataset path and name

.. GENERATED FROM PYTHON SOURCE LINES 15-20

.. code-block:: default


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "MPSU"
    campaign_name = ""


.. GENERATED FROM PYTHON SOURCE LINES 21-22

Define standard parameters for spectrogram computation

.. GENERATED FROM PYTHON SOURCE LINES 22-33

.. code-block:: default


    spectrogram = Spectrogram(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name))

    spectrogram.dataset_sr = 18000
    spectrogram.spectro_duration = 15

    spectrogram.nfft = 1024
    spectrogram.window_size = 1024
    spectrogram.overlap = 0



.. GENERATED FROM PYTHON SOURCE LINES 34-35

Check size of spectrogram

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default


    spectrogram.check_spectro_size()


.. GENERATED FROM PYTHON SOURCE LINES 39-40

Initialize spectrogram computation ; this method will prepare audio data 

.. GENERATED FROM PYTHON SOURCE LINES 40-53

.. code-block:: default


    reshape_method = "classic" # Automatically reshape the audio files to fit the spectro_duration value. Available methods : "classic" or "legacy"
    merge_on_reshape = False # Set to False if fyou don't want to merge audio files while reshaping them (if they do not follow each other chronologically for example)
    force_init = False # Force every initialization parameter, including force_reshape and other computing jobs. It is best to avoid using it.
    spectrogram.initialize(reshape_method=reshape_method, force_init=force_init, merge_on_reshape=merge_on_reshape)#, offset_overlap=offset_overlap)

    list_wav_to_process = glob.glob(path_osmose_dataset+f'{dataset_name}/data/audio/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/*wav')

    spectrogram.process_all_files(list_wav_to_process=list_wav_to_process)






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.000 seconds)


.. _sphx_glr_download_gallery_tutorials_Spectrogram_rate_spectrogram.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: rate_spectrogram.py <rate_spectrogram.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: rate_spectrogram.ipynb <rate_spectrogram.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
