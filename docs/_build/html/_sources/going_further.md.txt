


=================
Going further 
=================


Develop
=================

1. First, create an empty git repository in a newly created folder and clone this repository.


.. code-block:: bash
	git init

	git clone https://github.com/Project-OSmOSE/osmose-toolkit.git


2. Create a Conda virtual environment in python 3.10.

.. code-block:: bash
	conda create --name osmose python=3.10 -y
	conda activate osmose


3. Install poetry and use it to install the package.

.. code-block:: bash
	conda install poetry
	poetry install


Note: if `poetry install` fails with the message ``ImportError: cannot import name 'PyProjectException'``, run this line instead:

.. code-block:: bash
	conda install -c conda-forge poetry==1.3.2


The package is installed in editable mode! You can now call it just like any regular python package as long as you are in the environment.

.. code-block:: python
	import OSmOSE as osm

	dataset = osm.Dataset()


Note that it is installed in editable mode, meaning that any change made to the package's file will be reflected immediately on the environment, without needing to reload it. 






Contribute
=================


Here is the general workflow for contributing to our project:


1. Install locally our toolkit (see section **Local installation** below);

2. Start by reviewing our Github [issues](https://github.com/Project-OSmOSE/osmose-toolkit/issues), get in touch with our developer team to obtain an account, and propose new issues anytime following standard procedures (in particular, among other must-have: short description, assignees, status, label...);

3. Develop and validate locally your contribution. Please follow standad github procedures such as developing on a new branch built from our main branch; no pushes will be accepted on our main repository. We recomend the use of our poetry-based editable conda environment to ensure ??;

4. If intended to be deployed on Datarmor, please see section **Contribution on Datarmor** below;

5. Once validated, commit and push your branch to our Github project and create a pull-request so it can be properly peer-reviewed. 
 



Workflows
=================

.. include:: gallery_advanced_workflows/index .rst

