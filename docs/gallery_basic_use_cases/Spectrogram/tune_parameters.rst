
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_basic_use_cases/Spectrogram/tune_parameters.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_basic_use_cases_Spectrogram_tune_parameters.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_basic_use_cases_Spectrogram_tune_parameters.py:


==============================================
Tuning some parameters
==============================================

This code will show you how to tune more 

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: default


    from pathlib import Path
    from OSmOSE import Spectrogram
    import glob








.. GENERATED FROM PYTHON SOURCE LINES 14-15

Define dataset path and name

.. GENERATED FROM PYTHON SOURCE LINES 15-20

.. code-block:: default


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "MPSU"
    campaign_name = ""








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Define standard parameters for spectrogram computation

.. GENERATED FROM PYTHON SOURCE LINES 22-35

.. code-block:: default


    spectrogram = Spectrogram(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name))

    spectrogram.dataset_sr = 50000
    spectrogram.spectro_duration = 30

    spectrogram.nfft = 1024
    spectrogram.window_size = 1024
    spectrogram.overlap = 80

    spectrogram.dynamic_min = -140
    spectrogram.dynamic_max = -12





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    No valid processed/adjust_metadata.csv found and no parameters provided. All attributes will be initialized to default values..  





.. GENERATED FROM PYTHON SOURCE LINES 36-37

Check size of spectrogram

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: default


    spectrogram.check_spectro_size()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    your smallest tile has a duration of: 30.0 (s), with a number of spectra of 7312 

    Note that unless you have a 4K screen, unwanted numerical compression might occur when visualizing your spectrograms..


    your resolutions : time =  0.004 (s) / frequency =  48.828 (Hz)




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Initialize everything needed for spectrogram computation ; in particular, this method will segment and/or resample audio files if needed

.. GENERATED FROM PYTHON SOURCE LINES 42-49

.. code-block:: default


    spectrogram.initialize()

    wav_path = glob.glob(path_osmose_dataset+f'{dataset_name}/data/audio/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/*wav')

    spectrogram.process_all_files(list_wav_to_process=wav_path)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Generating spectrograms for 20211204_064000.wav
    - data min : -0.05041514248009193 
     - data max : 0.05087180175843474 
     - data mean : -3.389725784813923e-05 
     - data std : 0.00819057627276753
    - min log spectro : -158.9179413631119 
     - max log spectro : -5.262431065938616 

    Generating spectrograms for 20211204_064500.wav
    - data min : -0.03430079803717911 
     - data max : 0.0366197702593772 
     - data mean : -2.906596115100738e-05 
     - data std : 0.007114513069441149
    - min log spectro : -182.12791513456037 
     - max log spectro : -11.948374191121523 

    Generating spectrograms for 20211204_065000.wav
    - data min : -0.07174948617300494 
     - data max : 0.0638473820621174 
     - data mean : -3.394455412248411e-05 
     - data std : 0.007829718926139706
    - min log spectro : -165.80503473488795 
     - max log spectro : -6.9875444798241695 

    Generating spectrograms for 20211204_065500.wav
    - data min : -0.2268965969119568 
     - data max : 0.16253770952346766 
     - data mean : -3.108689397928615e-05 
     - data std : 0.012455880071785384
    - min log spectro : -158.95082591908886 
     - max log spectro : 7.170482163178578 

    Generating spectrograms for 20211204_070000.wav
    - data min : -0.037079987492122435 
     - data max : 0.03271631739772594 
     - data mean : -2.2722167477134425e-05 
     - data std : 0.006921378620772827
    - min log spectro : -154.287121629264 
     - max log spectro : -12.885705273593988 

    Generating spectrograms for 20211204_070500.wav
    - data min : -0.03918317189308489 
     - data max : 0.03924493241192095 
     - data mean : -3.887921135058395e-05 
     - data std : 0.0070792823782342
    - min log spectro : -171.4808541415669 
     - max log spectro : -11.389126682281939 

    Generating spectrograms for 20211204_071000.wav
    - data min : -0.043214563880757895 
     - data max : 0.045805557713708846 
     - data mean : -2.8250201705676537e-05 
     - data std : 0.006968460933037484
    - min log spectro : -153.52733203877938 
     - max log spectro : -12.43374778019119 

    Generating spectrograms for 20211204_071500.wav
    - data min : -0.10037166278445415 
     - data max : 0.09734695327877109 
     - data mean : -3.201120923659414e-05 
     - data std : 0.0117620413298528
    - min log spectro : -171.4534381930622 
     - max log spectro : -4.218041689363526 

    Generating spectrograms for 20211204_072000.wav
    - data min : -0.03496926811176782 
     - data max : 0.035431722391122314 
     - data mean : -3.3135518222332065e-05 
     - data std : 0.007018086293843772
    - min log spectro : -171.4503844405786 
     - max log spectro : -10.93477701835103 





.. GENERATED FROM PYTHON SOURCE LINES 50-51

Visualize an example of spectrogram 

.. GENERATED FROM PYTHON SOURCE LINES 51-68

.. code-block:: default


    spectrogram_path = glob.glob(path_osmose_dataset+f'{dataset_name}/processed/spectrogram/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/{spectrogram.nfft}_{spectrogram.window_size}_{spectrogram.overlap}/image/*png')

    from matplotlib import pyplot as plt
    from matplotlib import image as mpimg
  
    image = mpimg.imread(spectrogram_path[0])
    plt.imshow(image, interpolation='nearest', aspect='auto')

    ax = plt.gca()
    ax.xaxis.set_tick_params(labelbottom=False)
    ax.yaxis.set_tick_params(labelleft=False)
    ax.set_xticks([])
    ax.set_yticks([])

    plt.show()




.. image-sg:: /gallery_basic_use_cases/Spectrogram/images/sphx_glr_tune_parameters_001.png
   :alt: tune parameters
   :srcset: /gallery_basic_use_cases/Spectrogram/images/sphx_glr_tune_parameters_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 42.709 seconds)


.. _sphx_glr_download_gallery_basic_use_cases_Spectrogram_tune_parameters.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_parameters.py <tune_parameters.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_parameters.ipynb <tune_parameters.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
